#!/usr/bin/env bash

# shellcheck disable=1091
export LANG="en_US.UTF-8"
export LC_CTYPE="$LANG"
export LC_ALL="$LANG"
export COLORTERM=truecolor

# XDG directories
export XDG_CONFIG_HOME="$HOME/.config"
export  XDG_CACHE_HOME="$HOME/.cache"
export   XDG_DATA_HOME="$HOME/.local/share"
export  XDG_STATE_HOME="$HOME/.local/state"

[ -d "$XDG_CONFIG_HOME" ] || mkdir -m 0750 "$XDG_CONFIG_HOME"
[ -d "$XDG_CACHE_HOME" ]  || mkdir -m 0750 "$XDG_CACHE_HOME"
[ -d "$XDG_DATA_HOME" ]   || mkdir -m 0750 "$XDG_DATA_HOME"
[ -d "$XDG_STATE_HOME" ]  || mkdir -m 0750 "$XDG_STATE_HOME"

# Local bin
PATH="$HOME/.local/bin:$PATH:bin"

# History settings
export HISTSIZE=20000
if [ "$BASH" ]; then
	export HISTFILE="$XDG_CACHE_HOME/bash_history"
	export HISTFILESIZE=15000000
	export HISTTIMEFORMAT="%F %T "
	export HISTIGNORE='pwd:jobs:ls:history:clear:r:ranger'
	export HISTCONTROL=ignoreboth
fi

# https://www.gnu.org/software/bash/manual/html_node/Readline-Init-File.html
export INPUTRC="$XDG_CONFIG_HOME/bash/inputrc"

# Editor and pager
EDITOR=/usr/bin/vim
SUDO_EDITOR="$EDITOR"
SELECTED_EDITOR="$EDITOR"
MANWIDTH=999
MANPAGER=less
if hash nvim 2>/dev/null; then
	EDITOR=/usr/bin/nvim
	SELECTED_EDITOR="$EDITOR"
	MANPAGER='nvim +Man!'
fi
export EDITOR
export SUDO_EDITOR
export SELECTED_EDITOR
export VISUAL="$EDITOR"
export MANWIDTH
export MANPAGER

# pager
export PAGER=less
export LESS="-FiQMXRwJ --incsearch --no-vbell --status-col-width 1"
export LESSQUIET=1
export LESSCHARSET="UTF-8"
export LESSHISTFILE="$XDG_CACHE_HOME/less_history"

# lf bin to PATH
PATH="$XDG_CONFIG_HOME/lf/bin:$PATH"

# docker config
if hash docker 2>/dev/null; then
	export DOCKER_CONFIG="${XDG_CONFIG_HOME}"/docker
fi

# cargo
if hash cargo 2>/dev/null; then
	export RUSTUP_HOME="$XDG_DATA_HOME/rustup"
	export CARGO_HOME="$XDG_DATA_HOME/cargo"
	PATH="$XDG_DATA_HOME/cargo/bin:$PATH"
fi

# python
if hash pipx 2>/dev/null; then
	export PIPX_HOME="$XDG_DATA_HOME/python/pipx"
	export PIPX_BIN_DIR="$XDG_DATA_HOME/python/pipx/bin"
	PATH="${PIPX_BIN_DIR}:${PATH}"
fi

# node version manager
if [[ -s "$XDG_DATA_HOME/node/nvm.sh" ]]; then
	export NVM_DIR="$XDG_DATA_HOME/node"
  . "$NVM_DIR/nvm.sh"
fi

if hash npm 2>/dev/null; then
	export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
fi

# yarn builder
if hash yarn 2>/dev/null; then
	PATH="$XDG_DATA_HOME/yarn/global/node_modules/.bin/:$PATH"
	export YARN_ENABLE_TELEMETRY=0
fi

# php builder
if hash composer 2>/dev/null; then
  export COMPOSER_HOME="$XDG_CACHE_HOME/composer"
fi

# java, kotlin, gradle version manager
if [[ -s "$XDG_DATA_HOME/sdkman/bin/sdkman-init.sh" ]]; then
	export SDKMAN_DIR="$XDG_DATA_HOME/sdkman"
  . "$SDKMAN_DIR/bin/sdkman-init.sh"
fi

# Java stuff
if hash java 2>/dev/null; then
	# Java XWayland blank screens fix
	export _JAVA_AWT_WM_NONREPARENTING=1
	# java prefs
	export JAVA_TOOL_OPTIONS="$JAVA_TOOL_OPTIONS \
		-Djava.util.prefs.userRoot=$XDG_CONFIG_HOME/java
    -Dconfig.override_with_env_vars=true \
    -Djava.net.preferIPv4Stack=true \
    -Duser.timezone=UTC \
    -Dquill.macro.log=false \
    -XX:+PerfDisableSharedMem"
	export JDK_JAVA_OPTIONS="$JDK_JAVA_OPTIONS \
		-Dawt.useSystemAAFontSettings=on \
		-Dswing.aatext=true \
		-Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel \
		-Dswing.crossplatformlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel \
		-Djdk.gtk.version=3 \
		-Dawt.java2d.uiScale.enabled=true \
		-Dsun.java2d.opengl=true"
	# gradle builder
	export GRADLE_USER_HOME="$XDG_DATA_HOME/gradle"
fi

# Export the final PATH
export PATH

# vim: ts=2 sw=2 tw=80 set ft=sh noet :
